# Copyright 2000, 2001, 2002, 2003, 04, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2013
# Laurence Newell
# starbase@ukraa.com
# radio.telescope@btinternet.com
#
# This file is part of Starbase.
#
# Starbase is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Starbase is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Starbase.  If not, see http://www.gnu.org/licenses.

# StarinetPythonLoggerDAO

getRealtimeData=Return the current value of the data taken from the controller analogue to digital converters (ADC). These data are indicated on the instrument's control panel in the rack, and are available via the instrument metadata.

# Clock
getClockDate=Get the Date from the Controller Clock, in the format yyyy-mm-dd (ISO 8601).
getClockTime=Get the Time (UT) from the Controller Clock, in the format hh:mm:ss (ISO 8601).

# Starinet
getStarinetAddress=This command returns the IP Address and UDP Port of the Starinet controller. It reads the address field directly from the instrument XML, and is provided as a convenient way to obtain the address for use elsewhere.
getMACAddress=This command returns the Media Access Control (MAC) Address of a Starinet controller's hardware. This is a globally-unique identifier of the networked device. See: http://en.wikipedia.org/wiki/MAC_address for further information.
getHostname=Get the Hostname of the Controller. The name setting is preserved through a power off-on cycle, and reset(Soft). However, reset(Defaults) will restore the 'factory setting' of "StarinetLogger".

# Maintenance
writeConfigurationXML=A <b>Builder</b> command which writes the specified Controller or Module XML configuration file, at the specified location, in a form suitable for loading into an EEPROM device. Markers such as [controller_core] and [plugin_manifest] are placed to show how the Controller and Plugin XML should be reassembled to give the XML for the composite Instrument. The compression option removes all comments and whitespace, to save space in the EEPROM device.
writeCommandMap=A <b>Builder</b> command which writes a header file containing all SendToPort Command Codes, at the specified location. This file is used by the target compiler to rebuild the Controller Operating System with the correct CommandCodeBase, CommandCode and CommandVariant codes for this specific Controller.

# Publisher
publisher=Start or stop the chart publisher.
setPublisher=Set the FTP server parameters and upload interval.
getPublisher=Get the FTP server parameters and upload interval.
setPublisherLabels=Set the channel labels.
getPublisherLabels=Get the channel labels.
getPublisherArtist=Set the layout parameters. Combined or Stacked layout, with the ability to disable unused channels.
setPublisherArtist=Get the layout parameters. Combined or Stacked layout, with the ability to disable unused channels.
