# Copyright 2000, 2001, 2002, 2003, 04, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2013
# Laurence Newell
# starbase@ukraa.com
# radio.telescope@btinternet.com
#
# This file is part of Starbase.
#
# Starbase is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Starbase is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Starbase.  If not, see http://www.gnu.org/licenses.

# StarinetLoggerDAO

getRealtimeData=Return the current value of the data taken from the controller analogue to digital converters (ADC). These data are indicated on the instrument's control panel in the rack, and are available via the instrument metadata.

# SerialPort
getPortSettings=Get the current settings of the serial port module. Returned in the format BaudRate,Parity,DataBits,StopBits. For example: 57600,O,8,2 for 57600 Baud, Odd Parity, 8 Data Bits, 2 Stop Bits.
setPortSettings=Set the settings of the serial port module. Use the format BaudRate,Parity,DataBits,StopBits. For example: 57600,O,8,2 for 57600 Baud, Odd Parity, 8 Data Bits, 2 Stop Bits.
getReceiveTimeout=Get the current value of the Receive timeout in seconds.
setReceiveTimeout=Set the value of the Receive timeout in seconds. Allowed range 1 to 4095 seconds.

# Clock
getClockDate=Get the Date from the Controller Clock, in the format yyyy-mm-dd (ISO 8601).
setClockDate=Set the Date on the Controller Clock, in the format yyyy-mm-dd (ISO 8601).
getClockTime=Get the Time (UT) from the Controller Clock, in the format hh:mm:ss (ISO 8601).
setClockTime=Set the Time (UT) on the Controller Clock, in the format hh:mm:ss (ISO 8601).
getNTPServer=This command reads the IP Address of the NTP server currently used for time synchronisation. Note that NTP synchronisation may not be currently enabled, check this with getNTPSyncEnable().
setNTPServer=This command sets the IP Address of the NTP server to be used for time synchronisation. Note that in the UK, users are requested to select one of the NTP pool servers. See: http://www.pool.ntp.org/zone/uk for further information. (e.g. use 194.238.48.2 or 87.98.254.133 or 149.255.102.233)
getNTPSyncEnable=Get the state of the NTP synchronisation control. If NTP is disabled, then the controller internal clock may drift relative to the Observatory Clock.
setNTPSyncEnable=Control the use of NTP for time synchronisation. If NTP is disabled, then the controller internal clock may drift relative to the Observatory Clock.
getNTPSyncPeriod=Get the period in seconds between NTP synchronisation events.
setNTPSyncPeriod=Set the period in seconds between NTP synchronisation events. Note that you should not use this command frequently if it is set to a fast rate, since it may cause excessive network traffic and server congestion.

# I2C
readModule=Reads data from a plugin module connected via I2C. You will need to know the DeviceAddress, AddressingMode and DeviceCode.
writeModule=Write data directly to a plugin module connected via I2C. You will need to know the DeviceAddress, AddressingMode and DeviceCode. Use with caution, since some external devices may be damaged by incorrect configuration.

# Starinet
getStarinetAddress=This command returns the IP Address and UDP Port of the Starinet controller. It reads the address field directly from the instrument XML, and is provided as a convenient way to obtain the address for use elsewhere.
setStarinetAddress=This command sets the IP Address and UDP Port of the Starinet controller, which are saved to the Controller's non-volatile memory (probably EEPROM), provided that Dynamic Host Configuration Protocol (DHCP) is disabled.
getMACAddress=This command returns the Media Access Control (MAC) Address of a Starinet controller's hardware. This is a globally-unique identifier of the networked device. See: http://en.wikipedia.org/wiki/MAC_address for further information.
getHostname=Get the Hostname of the Controller. The name setting is preserved through a power off-on cycle, and reset(Soft). However, reset(Defaults) will restore the 'factory setting' of "StarinetLogger".
setHostname=Set the Hostname of the Controller. Hostname labels may contain only the ASCII letters 'a' through 'z' (case-insensitive), the digits '0' through '9', and the hyphen ('-'). The name may start with a digit, but not a hyphen. The NETBIOS name will be derived from the hostname by taking the first 15 characters, and making them all upper case.
getDHCPEnable=Get the state of the Dynamic Host Configuration Protocol control. If enabled, DHCP is used to obtain an IP address for the Controller. If disabled, the IP address stored in the Controller memory is used.
setDHCPEnable=Controls the use of Dynamic Host Configuration Protocol to obtain an IP address. If enabled, DHCP is used to obtain an IP address for the Controller. If disabled, the IP address stored in the Controller memory is used.

# Maintenance
writeConfigurationXML=A <b>Builder</b> command which writes the specified Controller or Module XML configuration file, at the specified location, in a form suitable for loading into an EEPROM device. Markers such as [controller_core] and [plugin_manifest] are placed to show how the Controller and Plugin XML should be reassembled to give the XML for the composite Instrument. The compression option removes all comments and whitespace, to save space in the EEPROM device.
writeCommandMap=A <b>Builder</b> command which writes a header file containing all SendToPort Command Codes, at the specified location. This file is used by the target compiler to rebuild the Controller Operating System with the correct CommandCodeBase, CommandCode and CommandVariant codes for this specific Controller.
