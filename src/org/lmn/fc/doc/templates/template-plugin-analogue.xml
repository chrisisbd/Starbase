<!-- Analogue Plugin -->
<Plugin>

    <Address>00</Address>
    <Identifier>Analogue</Identifier>
    <Name>Analogue</Name>
    <Description>The Controller's Analogue facilities</Description>
    <ResourceKey>Analogue</ResourceKey>

    <!-- Example of Configuration Metadata specific to this Plugin -->
    <Configuration>
        <md:Key>Example.Data</md:Key>
        <md:Value>Example</md:Value>
        <md:DataTypeName>String</md:DataTypeName>
        <md:Units>Dimensionless</md:Units>
        <md:Description>A sample item of Analogue Plugin metadata</md:Description>
    </Configuration>

    <!-- The Analogue Plugin has a CommandCodeBase of 02 -->
    <CommandCodeBase>02</CommandCodeBase>

    <Command>
        <Identifier>getA2D</Identifier>
        <CommandCode>00</CommandCode>
        <Software>
            <Identifier>Analogue Command</Identifier>
            <Version>00.1</Version>
            <Description>Gets the voltage read by the selected A2D channel</Description>
        </Software>
        <Parameter>
            <Name>A2D.Channel</Name>
            <InputDataType>
                <DataTypeName>DecimalByte</DataTypeName>
            </InputDataType>
            <TrafficDataType>
                <!-- Staribus Decimal bytes are always three digits 000...255 -->
                <DataTypeName>DecimalByte</DataTypeName>
            </TrafficDataType>
            <Units>Dimensionless</Units>
            <Regex>^[0-7]$</Regex>
            <Tooltip>Allowed Values: Channels 0 to 7</Tooltip>
        </Parameter>
        <SendToPort>true</SendToPort>
        <Response>
            <Name>A2D.Value</Name>
            <DataTypeName>DecimalInteger</DataTypeName>
            <Units>mV</Units>

        </Response>
    </Command>

    <Command>
        <Identifier>getD2A</Identifier>
        <CommandCode>01</CommandCode>
        <Software>
            <Identifier>Analogue Command</Identifier>
            <Version>00.1</Version>
            <Description>Gets the voltage output by the selected D2A channel</Description>
        </Software>
        <Parameter>
            <Name>D2A.Channel</Name>
            <InputDataType>
                <DataTypeName>DecimalByte</DataTypeName>
            </InputDataType>
            <TrafficDataType>
                <!-- Staribus Decimal bytes are always three digits 000...255 -->
                <DataTypeName>DecimalByte</DataTypeName>
            </TrafficDataType>
            <Units>Dimensionless</Units>
            <Regex>^[0|1]$</Regex>
            <Tooltip>Allowed Values: Channels 0 or 1</Tooltip>
        </Parameter>
        <SendToPort>true</SendToPort>
        <Response>
            <Name>D2A.Value</Name>
            <DataTypeName>DecimalInteger</DataTypeName>
            <Units>mV</Units>
            <Regex>^0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500)$</Regex>
        </Response>
    </Command>

    <Command>
        <Identifier>setD2A</Identifier>
        <CommandCode>02</CommandCode>
        <Software>
            <Identifier>Analogue Command</Identifier>
            <Version>00.1</Version>
            <Description>Sets the voltage to be output by the selected D2A channel</Description>
        </Software>
        <Parameter>
            <Name>D2A.Channel</Name>
            <InputDataType>
                <DataTypeName>DecimalByte</DataTypeName>
            </InputDataType>
            <TrafficDataType>
                <!-- Staribus Decimal bytes are always three digits 000...255 -->
                <DataTypeName>DecimalByte</DataTypeName>
            </TrafficDataType>
            <Units>Dimensionless</Units>
            <Regex>^[0|1]$</Regex>
            <Tooltip>Allowed Values: Channels 0 or 1</Tooltip>
        </Parameter>
        <Parameter>
            <Name>D2A.Value</Name>
            <InputDataType>
                <DataTypeName>DecimalInteger</DataTypeName>
            </InputDataType>
            <TrafficDataType>
                <!-- Staribus Decimal integers are always four digits 0000...9999 -->
                <DataTypeName>DecimalInteger</DataTypeName>
            </TrafficDataType>
            <Units>mV</Units>
            <Regex>^0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500)$</Regex>
            <Tooltip>Allowed Values: 0000 to 2500 milliVolts</Tooltip>
        </Parameter>
        <SendToPort>true</SendToPort>
        <Ack>
            <Name>Ack</Name>
        </Ack>
    </Command>

    <Command>
        <Identifier>getData</Identifier>
        <CommandCode>03</CommandCode>
        <BlockedDataCommand>
            <BlockCountCommandCode>04</BlockCountCommandCode>
            <BlockCommandCode>05</BlockCommandCode>
        </BlockedDataCommand>
        <Software>
            <Identifier>Analogue Command</Identifier>
            <Version>00.1</Version>
            <Description>Gets the data produced by the Instrument</Description>
        </Software>
        <SendToPort>false</SendToPort>
        <Response>
            <Name>Instrument.Data</Name>
            <DataTypeName>VectorData</DataTypeName>
            <Units>Dimensionless</Units>
        </Response>
    </Command>

    <Command>
        <Identifier>getDataBlockCount</Identifier>
        <CommandCode>04</CommandCode>
        <BlockedDataCommand>
            <ParentCommandCode>03</ParentCommandCode>
        </BlockedDataCommand>
        <Software>
            <Identifier>Analogue Command</Identifier>
            <Version>00.1</Version>
            <Description>Gets the number of blocks in the Instrument data</Description>
        </Software>
        <SendToPort>true</SendToPort>
        <Response>
            <Name>Instrument.BlockCount</Name>
            <DataTypeName>HexInteger</DataTypeName>
            <Units>Dimensionless</Units>
            <Regex>[0-9A-F][0-9A-F][0-9A-F][0-9A-F]</Regex>
        </Response>
    </Command>

    <Command>
        <Identifier>getDataBlock</Identifier>
        <CommandCode>05</CommandCode>
        <BlockedDataCommand>
            <ParentCommandCode>03</ParentCommandCode>
        </BlockedDataCommand>
        <Software>
            <Identifier>Analogue Command</Identifier>
            <Version>00.1</Version>
            <Description>Gets the specified block of Instrument data</Description>
        </Software>
        <Parameter>
            <Name>Instrument.BlockID</Name>
            <InputDataType>
                <DataTypeName>HexInteger</DataTypeName>
            </InputDataType>
            <TrafficDataType>
                <DataTypeName>String</DataTypeName>
            </TrafficDataType>
            <Units>Dimensionless</Units>
            <Regex>[0-9A-F][0-9A-F][0-9A-F][0-9A-F]</Regex>
            <Tooltip>Allowed Values: BlockID 0000 to FFFF</Tooltip>
        </Parameter>
        <SendToPort>true</SendToPort>
        <Response>
            <Name>Instrument.Block</Name>
            <DataTypeName>VectorData</DataTypeName>
            <Units>Dimensionless</Units>
        </Response>
    </Command>

    <Software>
        <Identifier>Analogue</Identifier>
        <Version>01.0</Version>
        <Description>The Controller processor on-chip Analogue facilities</Description>
    </Software>
</Plugin>

